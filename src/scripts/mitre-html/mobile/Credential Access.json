[
  {
    "id": "T1517",
    "name": "Access Notifications",
    "description": "Adversaries may collect data within notifications sent by the operating system or other applications. Notifications may contain sensitive data such as one-time authentication codes sent over SMS, email, or other mediums. In the case of Credential Access, adversaries may attempt to intercept one-time code sent to the device. Adversaries can also dismiss notifications to prevent the user from noticing that the notification has arrived and can trigger action buttons contained within notifications.",
    "outcome": "No Test Coverage",
    "topCount": 0,
    "bottomCount": 0,
    "subtechniques": []
  },
  {
    "id": "T1414",
    "name": "Clipboard Data",
    "description": "Adversaries may abuse clipboard manager APIs to obtain sensitive information copied to the device clipboard. For example, passwords being copied and pasted from a password manager application could be captured by a malicious application installed on the device.",
    "outcome": "No Test Coverage",
    "topCount": 0,
    "bottomCount": 0,
    "subtechniques": []
  },
  {
    "id": "T1634",
    "name": "Credentials from Password Store",
    "description": "Adversaries may search common password storage locations to obtain user credentials. Passwords can be stored in several places on a device, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users to manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
    "outcome": "No Test Coverage",
    "topCount": 0,
    "bottomCount": 0,
    "subtechniques": [
      {
        "id": ".001",
        "name": "Keychain",
        "description": "Adversaries may collect keychain data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials.",
        "outcome": "No Test Coverage",
        "topCount": 0,
        "bottomCount": 0
      }
    ]
  },
  {
    "id": "T1417",
    "name": "Input Capture",
    "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal device usage, users often provide credentials to various locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g.Keylogging) or rely on deceiving the user into providing input into what they believe to be a genuine application prompt (e.g.GUI Input Capture).",
    "outcome": "No Test Coverage",
    "topCount": 0,
    "bottomCount": 0,
    "subtechniques": [
      {
        "id": ".001",
        "name": "Keylogging",
        "description": "Adversaries may log user keystrokes to intercept credentials or other information from the user as the user types them.",
        "outcome": "No Test Coverage",
        "topCount": 0,
        "bottomCount": 0
      },
      {
        "id": ".002",
        "name": "GUI Input Capture",
        "description": "Adversaries may mimic common operating system GUI components to prompt users for sensitive information with a seemingly legitimate prompt. The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Compared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this techniqueâ€™s use.",
        "outcome": "No Test Coverage",
        "topCount": 0,
        "bottomCount": 0
      }
    ]
  },
  {
    "id": "T1635",
    "name": "Steal Application Access Token",
    "description": "Adversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources. This can occur through social engineering or URI hijacking and typically requires user action to grant access, such as through a system \"Open With\" dialogue.",
    "outcome": "No Test Coverage",
    "topCount": 0,
    "bottomCount": 0,
    "subtechniques": [
      {
        "id": ".001",
        "name": "URI Hijacking",
        "description": "Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.",
        "outcome": "No Test Coverage",
        "topCount": 0,
        "bottomCount": 0
      }
    ]
  }
]